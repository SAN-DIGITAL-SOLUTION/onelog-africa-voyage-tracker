-- Script de v√©rification du compte super administrateur (CORRIG√â)
-- Email: san@sandigitalsolutions.com

-- 1. V√©rifier si l'utilisateur existe dans auth.users
SELECT 
  id,
  email,
  email_confirmed_at,
  created_at,
  last_sign_in_at
FROM auth.users 
WHERE email = 'san@sandigitalsolutions.com';

-- 2. V√©rifier la structure de la table profiles
SELECT column_name, data_type, is_nullable
FROM information_schema.columns 
WHERE table_schema = 'public' 
AND table_name = 'profiles'
ORDER BY ordinal_position;

-- 3. V√©rifier si le profil existe (sans colonne email)
SELECT 
  id,
  created_at,
  updated_at
FROM profiles 
WHERE id IN (
  SELECT id FROM auth.users WHERE email = 'san@sandigitalsolutions.com'
);

-- 4. V√©rifier si le r√¥le super_admin existe dans la table roles
SELECT id, name, description 
FROM roles 
WHERE name = 'super_admin';

-- 5. V√©rifier la structure de user_roles (colonne role_id ajout√©e?)
SELECT column_name, data_type, is_nullable
FROM information_schema.columns 
WHERE table_schema = 'public' 
AND table_name = 'user_roles'
ORDER BY ordinal_position;

-- 6. V√©rifier l'assignation du r√¥le √† l'utilisateur via role_id
SELECT 
  ur.user_id,
  ur.role_id,
  r.name as role_name,
  u.email,
  ur.role_status
FROM user_roles ur
JOIN roles r ON ur.role_id = r.id
JOIN auth.users u ON ur.user_id = u.id
WHERE u.email = 'san@sandigitalsolutions.com';

-- 7. V√©rifier l'assignation via enum role (fallback)
SELECT 
  ur.user_id,
  ur.role::text as role_enum,
  u.email,
  ur.role_status
FROM user_roles ur
JOIN auth.users u ON ur.user_id = u.id
WHERE u.email = 'san@sandigitalsolutions.com';

-- 8. Compter tous les super_admin (role_id)
SELECT COUNT(*) as super_admin_count_role_id
FROM user_roles ur
JOIN roles r ON ur.role_id = r.id
WHERE r.name = 'super_admin' AND ur.role_status = 'approved';

-- 9. Diagnostic final
DO $$
DECLARE
  user_exists BOOLEAN;
  role_exists BOOLEAN;
  role_id_column_exists BOOLEAN;
  super_admin_assigned BOOLEAN;
BEGIN
  -- V√©rifier utilisateur
  SELECT EXISTS(SELECT 1 FROM auth.users WHERE email = 'san@sandigitalsolutions.com') INTO user_exists;
  
  -- V√©rifier r√¥le super_admin
  SELECT EXISTS(SELECT 1 FROM roles WHERE name = 'super_admin') INTO role_exists;
  
  -- V√©rifier colonne role_id
  SELECT EXISTS(
    SELECT 1 FROM information_schema.columns 
    WHERE table_schema = 'public' AND table_name = 'user_roles' AND column_name = 'role_id'
  ) INTO role_id_column_exists;
  
  -- V√©rifier assignation super_admin
  SELECT EXISTS(
    SELECT 1 FROM user_roles ur
    JOIN roles r ON ur.role_id = r.id
    JOIN auth.users u ON ur.user_id = u.id
    WHERE u.email = 'san@sandigitalsolutions.com' 
    AND r.name = 'super_admin' 
    AND ur.role_status = 'approved'
  ) INTO super_admin_assigned;
  
  RAISE NOTICE '=======================================';
  RAISE NOTICE 'DIAGNOSTIC SUPER ADMIN';
  RAISE NOTICE '=======================================';
  RAISE NOTICE 'üë§ Utilisateur san@sandigitalsolutions.com: %', CASE WHEN user_exists THEN '‚úÖ Existe' ELSE '‚ùå Manquant' END;
  RAISE NOTICE 'üè∑Ô∏è  R√¥le super_admin dans table roles: %', CASE WHEN role_exists THEN '‚úÖ Existe' ELSE '‚ùå Manquant' END;
  RAISE NOTICE 'üîó Colonne role_id dans user_roles: %', CASE WHEN role_id_column_exists THEN '‚úÖ Existe' ELSE '‚ùå Manquante' END;
  RAISE NOTICE 'üéØ Super admin assign√©: %', CASE WHEN super_admin_assigned THEN '‚úÖ Configur√©' ELSE '‚ùå Non assign√©' END;
  RAISE NOTICE '=======================================';
  
  IF NOT user_exists THEN
    RAISE NOTICE '‚ö†Ô∏è  ACTION REQUISE: L''utilisateur doit s''inscrire d''abord';
    RAISE NOTICE 'üìß Email: san@sandigitalsolutions.com';
    RAISE NOTICE 'üîë Mot de passe sugg√©r√©: voyagetracker2025*#';
  END IF;
  
  IF NOT role_exists THEN
    RAISE NOTICE '‚ö†Ô∏è  ACTION REQUISE: Cr√©er le r√¥le super_admin';
  END IF;
  
  IF NOT role_id_column_exists THEN
    RAISE NOTICE '‚ö†Ô∏è  ACTION REQUISE: Ajouter la colonne role_id √† user_roles';
  END IF;
  
  IF user_exists AND role_exists AND role_id_column_exists AND NOT super_admin_assigned THEN
    RAISE NOTICE '‚ö†Ô∏è  ACTION REQUISE: Assigner le r√¥le super_admin √† l''utilisateur';
  END IF;
  
  RAISE NOTICE '=======================================';
END $$;
