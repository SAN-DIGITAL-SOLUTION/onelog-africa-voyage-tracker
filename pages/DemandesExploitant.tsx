import { useEffect, useState } from "react";
import { useDemandes } from "@/hooks/useDemandes";
import DemandeCard from "@/components/DemandeCard";
import { supabase } from "@/services/supabaseClient";
import { useNavigate } from "react-router-dom";

export default function DemandesExploitant() {
  const [role, setRole] = useState<string | null>(null);
  const navigate = useNavigate();
  const { demandes, loading, error } = useDemandes("en_attente");
  const [refresh, setRefresh] = useState(0);

  useEffect(() => {
    // Vérifier le rôle de l'utilisateur connecté
    const fetchRole = async () => {
      const user = supabase.auth.user();
      if (!user) {
        navigate("/auth");
        return;
      }
      // Supposons que le rôle est stocké dans le profil utilisateur (table 'profiles')
      const { data, error } = await supabase
        .from("profiles")
        .select("role")
        .eq("id", user.id)
        .single();
      if (error || !data || data.role !== "exploitant") {
        navigate("/404");
        return;
      }
      setRole(data.role);
    };
    fetchRole();
  }, [navigate]);

  // Rafraîchir la liste après action
  const handleStatusChange = () => setRefresh((r) => r + 1);
  useEffect(() => {}, [refresh]);

  if (!role) return null; // Loader ou rien

  return (
    <div className="min-h-screen bg-gray-50 py-8 px-2">
      <h1 className="text-2xl font-bold text-center mb-6">Demandes en attente</h1>
      {loading && <p>Chargement...</p>}
      {error && <p className="text-red-500">{error}</p>}
      <div className="max-w-2xl mx-auto">
        {demandes.map((demande) => (
          <DemandeCard key={demande.id} demande={demande} onStatusChange={handleStatusChange} />
        ))}
        {demandes.length === 0 && !loading && <p className="text-gray-500 text-center">Aucune demande en attente</p>}
      </div>
    </div>
  );
}
